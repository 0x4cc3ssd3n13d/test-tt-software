// mock up data
const stockData = {
    "warehouse": {
        "WH1": {
            "laptop": {
                "price": 25000,
                "stock": 5
            },
            "mouse": {
                "price": 500,
                "stock": 10
            },
            "keyboard": {
                "price": 1000,
                "stock": 15
            }
        },
        "WH2": {
            "laptop": {
                "price": 25500,
                "stock": 8
            },
            "mouse": {
                "price": 600,
                "stock": 20
            },
            "keyboard": {
                "price": 1050,
                "stock": 25
            }
        },
        "WH3": {
            "laptop": {
                "price": 24000,
                "stock": 2
            },
            "mouse": {
                "price": 550,
                "stock": 50
            },
            "keyboard": {
                "price": 990,
                "stock": 30
            }
        }
    }
}
// ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• json ‡∏°‡∏≤‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô JS 
    const stock = JSON.parse(JSON.stringify(stockData.warehouse));
    let cart = [];
    let orderList = []
    let orderCount = 0;

function handleOrderSubmit(e){
    e.preventDefault();

    const product = document.getElementById('product').value;
    const qty = parseInt(document.getElementById('qty').value, 10);

    if(!product || isNaN(qty) || qty < 1) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô")
        return;
    }

    addToCart(product, qty);
    displayOrder(product, qty);
    renderCart();
}
//--add order to cart by click on buy per time
function addToCart(product, quantity){
    const existing = cart.find(item => item.product === product);
    if(existing){
        existing.quantity += quantity;
    }else{
        cart.push({ product, quantity });
    }
    renderCart();
}
//--show order when you click
function displayOrder(product, qty){
    const output = document.getElementById("orderOutput")
    output.innerHTML = `‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏° ${product} ‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô:${qty} ‡∏ä‡∏¥‡πâ‡∏ô`
}
//--show all item in cart
function renderCart() {
  const cartDiv = document.getElementById("cart_list");
  if(cart.length === 0){
    cartDiv.innerHTML = "<p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</p>"
  } else {
    cartDiv.innerHTML = `
      <h3>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h3>
      <ul>
        ${cart.map(item => `<li>${item.product} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${item.quantity} ‡∏ä‡∏¥‡πâ‡∏ô</li>`).join("")}
      </ul>
    `;
  }
}
// ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
function addOrderList() {
  document.getElementById("send_order").addEventListener("click", () => {
    if (cart.length === 0) {
      alert("‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á");
      return;
    }

    orderCount++;
    const currentCart = [...cart]; // ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå
    orderList.push({ id: orderCount, items: currentCart });

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô order_list
    const orderListDiv = document.getElementById("order_list");
    const orderHtml = `
      <div class="order">
        <h4>‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà ${orderCount}</h4>
        <ul>
          ${currentCart.map(item => `<li>${item.product} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${item.quantity} ‡∏ä‡∏¥‡πâ‡∏ô</li>`).join("")}
        </ul>
        <hr>
      </div>
    `;
    orderListDiv.innerHTML += orderHtml;

    // ‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
    cart = [];
    renderCart();
  });
}

function find_best_warehouse(order) {
  const selectedWarehouse = {};

  order.items.forEach(item => {
    let bestWH = null;
    let lowestPrice = Infinity;

    for (const [whName, products] of Object.entries(stock)) {
      const product = products[item.product];
      if (product && product.stock >= item.quantity && product.price < lowestPrice) {
        bestWH = whName;
        lowestPrice = product.price;
      }
    }

    if (bestWH) {
      selectedWarehouse[item.product] = bestWH;
    } else {
      selectedWarehouse[item.product] = null; // ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏≠
    }
  });

  return selectedWarehouse;
}

function process_order(order, allocation) {
  const unfulfilled = [];

  order.items.forEach(item => {
    const wh = allocation[item.product];
    if (wh && stock[wh][item.product].stock >= item.quantity) {
      stock[wh][item.product].stock -= item.quantity;
      console.log(`üì¶ ‡∏ï‡∏±‡∏î‡∏™‡∏ï‡πä‡∏≠‡∏Å‡∏à‡∏≤‡∏Å ${wh} ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${item.product} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${item.quantity}`);
    } else {
      unfulfilled.push(item.product);
    }
  });

  if (unfulfilled.length > 0) {
    alert(`‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ #${order.id} ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${unfulfilled.join(", ")}`);
  } else {
    console.log(`‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ #${order.id} ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢`);
  }

  renderStock();
}

function consolidate_shipping(order, allocation) {
  const shippingPlan = {};

  for (const item of order.items) {
    const wh = allocation[item.product];
    if (!shippingPlan[wh]) shippingPlan[wh] = [];
    shippingPlan[wh].push(item);
  }

  console.log(`‡πÅ‡∏ú‡∏ô‡∏£‡∏ß‡∏°‡∏™‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Order #${order.id}:`, shippingPlan);
  return shippingPlan;
}

function handle_concurrent_orders(orderList) {
  for (const order of orderList) {
    const allocation = find_best_warehouse(order); 

    process_order(order, allocation);            
    consolidate_shipping(order, allocation);
  }

  // clear & reset
  orderList.length = 0;
  cart.length = 0;

  document.getElementById("order_list").innerHTML = "<p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</p>";
  document.getElementById("cart_list").innerHTML = "<p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</p>";
  console.log("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß");
}

function renderStock(){
    const stockDiv = document.getElementById("stock_qty");
    let html = `<h3>‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏ï‡πä‡∏≠‡∏Å‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</h3>`;

    for(const [warehouse, products] of Object.entries(stock)){
        html += `<h4>${warehouse}</h4>`;
        for(const [product, detail] of Object.entries(products)){
            html += `<li>${product} ‡∏£‡∏≤‡∏Ñ‡∏≤: ${detail.price} ‡∏ö‡∏≤‡∏ó | ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ : ${detail.stock} ‡∏ä‡∏¥‡πâ‡∏ô</li>`
        }
        html += `</ul><hr>`;
    }

    stockDiv.innerHTML = html;
}

document.addEventListener("DOMContentLoaded", () => {
  document.getElementById("orderForm").addEventListener("submit", handleOrderSubmit);
  addOrderList();
  
  //‡∏î‡∏∂‡∏ástock 
  renderStock();

    // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
  document.getElementById("completeOrderBtn").addEventListener("click", () => {
    if (orderList.length === 0) {
      alert("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£");
      return;
    }
    handle_concurrent_orders(orderList);
  });
});